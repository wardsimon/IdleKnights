name: Build wheels for release
'on':
   push:
      branches:
         - main
env:
   CIBW_BUILD_VERBOSITY: 3
   CIBW_BEFORE_BUILD_WINDOWS: pip install delvewheel
   CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: 'delvewheel repair -w {dest_dir} {wheel}'
   CIBW_ARCHS_MACOS: x86_64 arm64
   REPOSITORY_NAME: IdleKnights

jobs:
   build_wheels:
      name: 'Build wheels on ${{ matrix.os }}'
      runs-on: '${{ matrix.os }}'
      strategy:
         matrix:
            os:
               - ubuntu-latest
               - windows-latest
               - macos-latest
      steps:
         -
            uses: actions/checkout@v3
         -
            uses: actions/setup-python@v2
         -
            name: Install cibuildwheel
            run: python -m pip install cibuildwheel
         -
            name: Build wheels
            run: python -m cibuildwheel --output-dir wheelhouse
            env:
               CIBW_SKIP: 'pp* cp{38,39,310}-manylinux_i686 *-musllinux_* cp*-win32'
               CIBW_PRERELEASE_PYTHONS: false
               CIBW_PROJECT_REQUIRES_PYTHON: '>=3.8'
         -
            uses: actions/upload-artifact@v2
            with:
               path: wheelhouse/*.whl

   build_aarch64_wheels:
      name: Build wheels manylinux_aarch64
      runs-on: ubuntu-latest
      strategy:
         matrix:
            python:
               - 38
               - 39
               - 310
               - 311
            include:
               -
                  os: ubuntu-latest
                  arch: aarch64
                  platform_id: manylinux_aarch64
      steps:
         -
            uses: actions/checkout@v3
         -
            name: Set up QEMU
            uses: docker/setup-qemu-action@v1
         -
            name: Install cibuildwheel
            run: python -m pip install cibuildwheel
         -
            name: Build wheels
            run: python -m cibuildwheel --output-dir wheelhouse
            env:
               CIBW_ARCHS_LINUX: '${{matrix.arch}}'
               CIBW_BUILD: 'cp${{ matrix.python }}-${{ matrix.platform_id }}'
         -
            uses: actions/upload-artifact@v2
            with:
               path: wheelhouse/*.whl

   release_wheels:
      permissions:
         contents: write
         pull-requests: write
      runs-on: ubuntu-latest
      needs:
         - build_wheels
         - build_aarch64_wheels
      name: Release the wheels
      steps:
         -
            uses: actions/checkout@v3
         -
            uses: actions/setup-python@v2
         -
            uses: actions/download-artifact@v2
         -
            name: Set name variable
            id: name
            shell: bash
            run: |
               echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
               KNIGHTS_VERSION=$(cat IdleKnights/__version__.py | grep __version__ | grep -Eo '([0-9]+)(\.?[0-9]+)*')
               echo "::set-output name=tag::$KNIGHTS_VERSION"
         -
            name: Upload Artifacts GitHub releases
            uses: ncipollo/release-action@v1.10.0
            with:
               draft: false
               prerelease: true
               allowUpdates: true
               replacesArtifacts: true
               name: 'ðŸš€ IdleKnights v${{ steps.name.outputs.tag }} ðŸ¦„'
               artifacts: ./**/*.whl
               tag: '${{ steps.name.outputs.tag }}'
               body: >-
                  This is an alpha build of IdleKnights (v${{
                  steps.name.outputs.tag }})
         -
            name: Generate HTML
            env:
               PACKAGE_NAME: IdleKnights
            run: |
               pip install requests
               python scripts/generate_html.py ${{ env.REPOSITORY_NAME }} ${{ env.PACKAGE_NAME }} ${{ secrets.GITHUB_TOKEN }}
         -
            name: Checkout target repo
            uses: actions/checkout@v3
            env:
               REPO: wardsimon/pypi
               REPO_PATH: pypi
            with:
               fetch-depth: 0
               token: ${{ secrets.MY_PYPI }}
               repository: '${{ env.REPO }}'
               path: '${{ env.REPO_PATH }}'
         -
            name: Copy index to new repo
            env:
               SOURCE: index.html
               TARGET: pypi/IdleKnights/
            run: 'cp ${{ env.SOURCE }} ${{ env.TARGET }}'
         -
            name: Push
            env:
               REPO_PATH: pypi
               GIT_USERNAME: action
               GIT_EMAIL: action@github.com
            run: |
               cd ${{ env.REPO_PATH }}
               git config --local user.name "${{ env.GIT_USERNAME }}"
               git config --local user.email "${{ env.GIT_EMAIL }}"
               git add .
               if [[ `git status --porcelain` ]]; then
                 git commit -m "Github Actions Automatically Built in `date +"%Y-%m-%d %H:%M"`"
                 git push
               fi
